using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Diagnostics;
using System.Threading;

namespace WindowsFormsApplication1
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void toolStripMenuItem1_Click(object sender, EventArgs e)
        {

        }

        private void toolStripStatusLabel1_Click(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            folderBrowserDialog1.ShowDialog();
            string selectedfolder = folderBrowserDialog1.SelectedPath;
            toolStripStatusLabel3.Text = selectedfolder;
            statusStrip1.Refresh();
            button2.Text = "Folder Selected";
            button2.Refresh();
            
        }

        private void toolStripMenuItem1_Click_1(object sender, EventArgs e)
        {

        }

        private void hexDump(string file)
        {
            //Utils.HexDump(file);
        }
        //http://www.howtogeek.com/howto/programming/get-a-list-of-running-processes-in-c/
        public void process_list()
        {
            Process[] processlist = Process.GetProcesses();
            foreach (Process theprocess in processlist)
            {
                listBox3.Items.Add(theprocess.ProcessName);

            }
        }
        int count { get; set; }
        //http://stackoverflow.com/questions/929276/how-to-recursively-list-all-the-files-in-a-directory-in-c
        private void countFilesInDir(string sDir)
        {
                foreach (string d in System.IO.Directory.GetDirectories(sDir))
                {
                    count = count + System.IO.Directory.GetFiles(d).Length;
                    countFilesInDir(d);
                }
            }
        private void scanFilesInDir()
        {
            foreach (string d in System.IO.Directory.GetDirectories(folderBrowserDialog1.SelectedPath))
            {
                foreach (string f in System.IO.Directory.GetFiles(d))
                {
                    try
                    {
                        var sha1sum = System.Security.Cryptography.SHA1.Create();
                        var file = System.IO.File.OpenRead(f);
                        string sha1check = BitConverter.ToString(sha1sum.ComputeHash(file)).Replace("-", "").ToLower();
                        listBox2.Items.Add(f + " " + sha1check);
                        sha1sum.Dispose();
                    }
                    catch (System.UnauthorizedAccessException e)
                    {
                        toolStripStatusLabel3.Text = "Could not access file ";
                        statusStrip1.Refresh();
                        MessageBox.Show("Could not access file " + f);
                        button1.Text = "Scan Now";
                        button1.Enabled = true;
                        button2.Enabled = true;
                        button1.Refresh();
                        button2.Refresh();
                    }
                }
                countFilesInDir(d);
            }
        }
        private void testListbox(string text)
        {
            listBox2.Items.Add(text);
        }
        private void button1_Click(object sender, EventArgs e)
        {
            button1.Text = "Scanning";
            button1.Enabled = false;
            button2.Enabled = false;
            button1.Refresh();
            button2.Refresh();
            System.IO.DirectoryInfo dir = new System.IO.DirectoryInfo(folderBrowserDialog1.SelectedPath);
            count = count + dir.GetFiles().Length;
            countFilesInDir(folderBrowserDialog1.SelectedPath);
            toolStripStatusLabel3.Text = "File 0 of " + count.ToString();
            statusStrip1.Refresh();
            int positionCounter = 0;
            listBox1.Items.Clear();
            listBox2.Items.Clear();
            listBox3.Items.Clear();
            foreach (string f in System.IO.Directory.GetFiles(folderBrowserDialog1.SelectedPath))
            {
                toolStripProgressBar1.Minimum = 0;
                toolStripProgressBar1.Maximum = 100;
                positionCounter++;
                toolStripStatusLabel3.Text = f + " File " + positionCounter + " of " + count.ToString();
                statusStrip1.Refresh();
                double inc = (double) 1 / count * 100;
                inc = Math.Round(inc, 0);
                int increment = (int)inc;
                toolStripProgressBar1.Increment(increment);
                statusStrip1.Refresh();
                //http://stackoverflow.com/questions/10520048/calculate-md5-checksum-for-a-file
                System.Security.Permissions.FileIOPermission p = new System.Security.Permissions.FileIOPermission(System.Security.Permissions.PermissionState.None);
                p.AllLocalFiles = System.Security.Permissions.FileIOPermissionAccess.Read;
                p.Demand();
                try
                {
                    var sha1sum = System.Security.Cryptography.SHA1.Create(); 
                    var file = System.IO.File.OpenRead(f);
                    string sha1check = BitConverter.ToString(sha1sum.ComputeHash(file)).Replace("-", "").ToLower();
                    listBox2.Items.Add(f + " " + sha1check);
                    sha1sum.Dispose();
                }
                catch (System.UnauthorizedAccessException d)
                {
                    toolStripStatusLabel3.Text = "Could not access file ";
                    statusStrip1.Refresh();
                    MessageBox.Show("Could not access file " + f);
                    button1.Text = "Scan Now";
                    button1.Enabled = true;
                    button2.Enabled = true;
                    button1.Refresh();
                    button2.Refresh();
                }
                
               
            }
            toolStripProgressBar1.Increment(100);
            button1.Text = "Scan Now";
            button1.Enabled = true;
            button2.Enabled = true;
            button1.Refresh();
            button2.Refresh();
            toolStripStatusLabel3.Text = "Scan Complete";
            statusStrip1.Refresh();
            positionCounter = 0;
            scanFilesInDir();
            process_list();

        }

        private void selectedFolderText_Click(object sender, EventArgs e)
        {
              
        }

        private void toolStripMenuItem1_Click_2(object sender, EventArgs e)
        {
            openFileDialog1.ShowDialog();
        }
    }
}
